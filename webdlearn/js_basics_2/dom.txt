working in the 1_DOM.html using inspect 
command:console.log(document)
output:VM1539:1 #document (http://127.0.0.1:5500/js_basics_2/1_DOM.html)
                <!DOCTYPE html>
                <html lang=​"en">
                ​<head>​…​</head>
                ​<body>​…​</body>​</html>​

command:document.getElementById('title')
output:<h1 id=​"title" class=​"heading">​DOM learning​</h1>​

command:document.getElementById('title').id
output:'title'

command:document.getElementById('title').class
output:undefined

command:document.getElementById('title').className
output:'heading'

command:document.getElementById('title').getAttribute('class')
output:'heading'

command:document.getElementById('title').setAttribute('class','test heading')
output:undefined   // but it updates the class in the element section

command:const title=document.getElementById('title')
output:undefined
command:title
output:<h1 id=​"title" class=​"heading">​DOM learning​</h1>​

command:title.style.backgroundColor='green'
output:'green'
command:title.style.padding='15px'
output:'15px'
command:title.style.border='3px solid red'
output:'3px solid red'

command:title.textContent
output:'DOM learning'
command:title.innerText
output:'DOM learning'
command:title.innerHTML
output:'DOM learning'
//seems like these three are same but there is some difference
command:title.innerText
output:'DOM learning'
command:title.textContent
output:'DOM learningtest text'
//when added span style:display=none then there comes the difference 
//textContent:shows all the content irrespective of visible or not
command:title.innerHTML
output:'DOM learning<span style="display:none">test text</span>'
//innerHTML: supports inner tags too

command:document.getElementsByClassName('heading')
output:HTMLCollection [h1#title.heading, title: h1#title.heading]

command:document.querySelector('h1')
output:<h1 id=​"title" class=​"heading">
        ​"DOM learning"
        <span style=​"display:​none">​test text​</span>​
        </h1>​
command:document.querySelector('h2')
output:<h2>​Lorem ipsum dolor sit amet​</h2>​
//this returns the first query of the selector 
//for id
command:document.querySelector('#title')
output:<h1 id=​"title" class=​"heading">
        ​"DOM learning"
        <span style=​"display:​none">​test text​</span>
        ​</h1>​
//for class
command:document.querySelector('.heading')
output:<h1 id=​"title" class=​"heading">
        ​"DOM learning"
        <span style=​"display:​none">​test text​</span>​
        </h1>​
command:document.querySelector('input[type="password"]')
output:<input type=​"password" name=​"password" id=​"password">​
//can have any selector supported by class

//if we add on list and wants to apply style on the first <li>
command:document.querySelector('ul')
output:<ul>
        ​<li>​…​</li>
        ​<li>​…​</li>
        ​<li>​…​</li>
        ​</ul>​
command:const list=document.querySelector('ul')
output:undefined
command:const turngreen=list.querySelector('li')
output:undefined
command:turngreen.style.backgroundColor='green'
output:'green'
//or
command:document.querySelector('ul').querySelector('li').style.backgroundColor='lightgreen'
output:'lightgreen'

//wants to change the content
command:const ele=document.querySelector('ul').querySelector('li')
output:undefined
command:ele
output:<li style=​"background-color:​ lightgreen;​">​…​</li>​::marker​"five"</li>​
command:ele.innerText='five'
output:'five'

//using querySelectorAll
//nodeList(collection of element rather than a single element):can work over loops
command:const templilist=document.querySelectorAll('li')
output:undefined
command:templilist
output:NodeList(3) [li, li, li]
   ERROR:     command:templilist.style.color='red'
              output:VM2084:1 Uncaught TypeError: Cannot set properties of undefined (setting 'color')
                    at <anonymous>:1:23
                    (anonymous) @ VM2084:1
command:templilist[0].style.color='red'
output:'red'
command:templilist.forEach((l)=>{
    l.style.backgroundColor='cyan';
})
output:undefined // turns all the <li> backgroundColor to cyan 

//html collection different from array : therefore need to convert to array to work over loop
command:document.getElementsByClassName('list-item')
output:HTMLCollection(4) [li.list-item, li.list-item, li.list-item, li.list-item]
command:const tempclasslist=document.getElementsByClassName('list-item')
output:undefined
 ERROR: command:tempclasslist.forEach(function(li) {
                    console.log(li);
                })
        output:VM3306:1 Uncaught TypeError: tempclasslist.forEach is not a function
                at <anonymous>:1:15
            (anonymous) @ VM3306:1
command:const myarr=Array.from(tempclasslist)
output:undefined
command:myarr
output:(4) [li.list-item, li.list-item, li.list-item, li.list-item]
command:myarr.forEach(function(li) {
    li.style.color='blue';
})
output:undefined  // turns blue